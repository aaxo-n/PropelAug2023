##question 1
def collatz_length(val):
    length = 1
    while val != 1:
        if val % 2 == 0:
            val = val // 2
        else:
            val = 3 * val + 1
        length =length+1
    return length
def longest_collatz_sequence(limit):
    max_length = 0
    starting_number = 0

    for i in range(1, limit):
        current_length = collatz_length(i)
        if current_length > max_length:
            max_length = current_length
            starting_number = i
    return starting_number, max_length

limit = 1233
starting_number, max_length = longest_collatz_sequence(limit)
print("The starting number less than 1 million with the longest Collatz sequence is" ,starting_number,",with a length of ",max_length)
#question 2
# Initialize a dictionary to store user account information
user_accounts = {}
account_counter = 1

question 2

# create a user account
def create_account():
    global account_counter
    name = input("Enter your name: ")
    initial_balance = float(input("Enter your initial balance: "))
    account_number = account_counter
    account_counter =account_counter+1
    user_accounts[account_number] = {"name": name, "balance": initial_balance}
    print(f"Account created successfully. Your account number is: {account_number}")

#  check balance
def check_balance():
    account_number = int(input("Enter your account number: "))
    if account_number in user_accounts:
        account_info = user_accounts[account_number]
        print(f"Name: {account_info['name']}")
        print(f"Balance: {account_info['balance']}")
    else:
        print("Account not found.")


# Function to withdraw money
def withdraw_money():
    account_number = int(input("Enter your account number: "))
    if account_number in user_accounts:
        amount = float(input("Enter the amount to withdraw: "))
        account_info = user_accounts[account_number]
        if amount <= account_info['balance']:
            account_info['balance'] -= amount
            print(f"Withdrawal successful. Updated balance: {account_info['balance']}")
        else:
            print("Insufficient balance.")
    else:
        print("Account not found.")


# Function to deposit money
def deposit_money():
    account_number = int(input("Enter your account number: "))
    if account_number in user_accounts:
        amount = float(input("Enter the amount to deposit: "))
        account_info = user_accounts[account_number]
        account_info['balance'] += amount
        print(f"Deposit successful. Updated balance: {account_info['balance']}")
    else:
        print("Account not found.")


# Main menu loop
while True:
    print("\nATM Menu:")
    print("1. Create User Account")
    print("2. Check Balance")
    print("3. Withdraw Money")
    print("4. Deposit Money")
    print("5. Exit")

    choice = input("Enter your choice (1/2/3/4/5): ")

    if choice == '1':
        create_account()
    elif choice == '2':
        check_balance()
    elif choice == '3':
        withdraw_money()
    elif choice == '4':
        deposit_money()
    elif choice == '5':
        print("Thank you for using the deepan ATM.stay safe!")
        break
    else:
        print("Invalid choice. Please enter a valid option.")
